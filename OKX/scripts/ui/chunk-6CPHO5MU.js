import{a as b,b as R,c as A}from"./chunk-LK7BWEIE.js";import{a as w}from"./chunk-LL63GZNI.js";import{c as y}from"./chunk-5OJTPISL.js";import{e as k}from"./chunk-BSFXZ46S.js";import{e as h,f}from"./chunk-ZMCTBWUY.js";import{W as E,X as S,u as B}from"./chunk-XTEDROPX.js";import{a as L}from"./chunk-WOMUNWBT.js";import{f as I,o as p,q as T}from"./chunk-6KXF36WM.js";p();T();var C=I(L());var l={getAccount:async({provider:e})=>{let o=e?.solana?.publicKey;if(!o){let{publicKey:a}=await e?.solana?.connect({onlyIfTrusted:!0});o=a}return o?.toBase58()},getSolanaConnection:({chainId:e})=>w({SolanaConnection:E,chainId:e}),getLatestBlockhash:async({from:e,to:o,chainId:a,isBlockHashFromRpc:t=!1})=>{let s,n;if(t){let r=await l.getSolanaConnection({chainId:a}).getLatestBlockhash();s=r?.blockhash,n=r?.lastValidBlockHeight}else{let i=k[a],r=y(h.GET_SIGNINFO,{address:e,coinId:i}),c=await f.post(r,{from:e,to:o});s=c?.data?.info?.recentBlockhash,n=c?.data?.info?.lastValidBlockHeight}return{recentBlockhash:s,lastValidBlockHeight:n}},signSolanaTransaction:async({payload:e,feePayer:o,chainId:a})=>{let{transaction:t,bizType:s,bizId:n=[],notReplaceBlockhash:i=!1}=e,r=null,c=()=>typeof e?.toJSON=="function"?e:e?.instruction,{recentBlockhash:u,lastValidBlockHeight:g}=await l.getLatestBlockhash({from:o,isBlockHashFromRpc:n?.length>0,chainId:a}),m=c();return m?(r=new B({feePayer:o,blockhash:u,lastValidBlockHeight:g}).add(m),r.recentBlockhash=u):t&&(i||(t?.version>=0?t.message.recentBlockhash=u:(t.signatures=[],t.recentBlockhash=u,t.lastValidBlockHeight=g),n.forEach(P=>{let x=A(s,P),d=S.fromSeed(x.slice(0,32));t?.version>=0?t.sign([d]):t.partialSign(d)})),r=t),r},signMessage:({provider:e,message:o})=>{let{solana:a}=e||{};return new Promise((t,s)=>{let n=new TextEncoder().encode(o);a.publicKey&&a.signMessage(n,"utf8").then(i=>{let r=Array.prototype.map.call(i.signature,c=>`00${c.toString(16)}`.slice(-2)).join("");t(r)}).catch(i=>{s(i)})})},signAllTransactions:({provider:e,transactions:o})=>new Promise((a,t)=>{e?.solana?.signAllTransactions(o).then(s=>{a(s)}).catch(s=>{t(s)})}),preExecuteTrade:async({address:e,transaction:o,chainId:a})=>{let t;try{t=C.default.encode(o.serialize({requireAllSignatures:!1,verifySignatures:!1}))}catch(n){console.log("preExecuteTrade err: ",n)}if(!t)return Promise.resolve();let[,s]=await R(f.post(h.PRE_EXECUTE_TRADE,{checkTypes:[8],from:e,chainId:a,simulateTransactionParamList:[{sigVerify:!1,replaceRecentBlockhash:!0,transaction:t}]},{timeout:3e4}));if(s){let n=s[0]?.simulateTransactionResultList||[];if(n?.length>0&&!n[0]?.result)throw{code:b.PRE_TRADE,message:n[0]?.msg}}},sendTransaction:async({provider:e,payload:o,cb:a,extraParams:t,address:s,chainId:n})=>async function(){let{solana:i}=e||{},r=await l.signSolanaTransaction({provider:e,payload:o,feePayer:i.publicKey,chainId:n});if(!r)throw new Error("no transaction");t?.isNotNeedPreExecute||l.preExecuteTrade({address:s,transaction:r,chainId:n});try{console.log("solana transaction",r);let{signature:c}=await i.signAndSendTransaction(r,{},t);return a&&a(c),c}catch(c){throw console.log("solana transaction error",c),c}}()},j=l;export{j as a};

window.inOKXExtension = true;
window.inMiniApp = false;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=chunk-6CPHO5MU.js.map
