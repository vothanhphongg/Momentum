import{o as d,q as l}from"./chunk-6KXF36WM.js";d();l();var i={getAccount:async({provider:t})=>{let n=await t?.eth?.getAccounts();return n&&n[0]?n[0].toLowerCase():""},getChainId:async({provider:t})=>await t?.eth?.getChainId(),signMessage:({provider:t,message:e,address:n})=>{let a=t;return new Promise((s,r)=>{a?.eth?.personal.sign(e,n,"").then(o=>{s(o)}).catch(o=>{r(o)})})},signWcMessage:({provider:t,message:e,address:n})=>i.signMessage({provider:t,message:e,address:n}),signTypedData:async({message:t,address:e})=>await window?.ethereum?.request({method:"eth_signTypedData_v4",params:[e,JSON.stringify(t)]}),watchAsset:async({provider:t,tokenOptions:e})=>{if(await t?.request({method:"wallet_watchAsset",params:e}))console.log("token successfully added to wallet!");else throw new Error("token add to wallet, something went wrong.")},addNetwork:async({provider:t,params:e})=>{if(await t?.request({method:"wallet_addEthereumChain",params:e}))console.log("network successfully added to wallet!");else throw new Error("network add to wallet, something went wrong.")},sendTransaction:({provider:t,payload:e,cb:n})=>new Promise((a,s)=>{console.log("Send transaction...."),t?.eth?.sendTransaction(e,(o,c)=>{if(console.log(`Send transaction hash : ${c}`),!c){s(o);return}n&&n(c),a(c)}).catch(o=>{s(o)})}),sendWcTransaction:({provider:t,payload:e,cb:n})=>i.sendTransaction({provider:t,payload:e,cb:n}),depositWToken:({web3:t,wTokenAddr:e,wTokenAbi:n,amount:a,account:s})=>{let r=new t.eth.Contract(n,e);return{from:s,to:e,value:t.utils.toHex(t.utils.toWei(a&&a.toString(),"ether")),data:r.methods.deposit().encodeABI()}},withdrawWToken:({web3:t,wTokenAddr:e,wTokenAbi:n,amount:a,account:s})=>{let r=new t.eth.Contract(n,e);return{from:s,to:e,data:r.methods.withdraw(a).encodeABI()}}},u=i;export{u as a};

window.inOKXExtension = true;
window.inMiniApp = false;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=chunk-6YZM4OTK.js.map
