import{a as I,b as S}from"./chunk-3KIOQDYC.js";import{a as H}from"./chunk-EFKEDCIX.js";import"./chunk-PTML5W4O.js";import"./chunk-YXB345S6.js";import{a as _}from"./chunk-IWJSY3O5.js";import{a as P}from"./chunk-QR4O7ZB4.js";import"./chunk-OQMIWCJU.js";import"./chunk-SRYEAF33.js";import"./chunk-JCM7SRK2.js";import{d as l,f as O}from"./chunk-DEOJU4Z3.js";import{a as w,b as x}from"./chunk-YOPEZ2F5.js";import"./chunk-6BXYJZHH.js";import"./chunk-CCEMKRO6.js";import"./chunk-2HSCH6R3.js";import"./chunk-CWNIM6RS.js";import"./chunk-NNAD25BL.js";import"./chunk-XV444F26.js";import{sa as E}from"./chunk-N2BCRNDB.js";import"./chunk-JGEHAFTO.js";import{a as y}from"./chunk-UVFOW4HH.js";import{kb as c,rc as D}from"./chunk-TM67VPZU.js";import"./chunk-VW6OQNWT.js";import{H as g}from"./chunk-PUSMMCUD.js";import{R as M,z as T}from"./chunk-UWJLNJLY.js";import"./chunk-VRY2ADKE.js";import"./chunk-VWEB6W6G.js";import"./chunk-XDY6V34Y.js";import"./chunk-JT3LNHPY.js";import"./chunk-47UWF72W.js";import"./chunk-JWYCKY2V.js";import"./chunk-G2266BV2.js";import"./chunk-324EPGNQ.js";import"./chunk-QYVQBXDG.js";import"./chunk-7D4PUIEN.js";import"./chunk-IWVM7XL6.js";import"./chunk-7QO4TZYQ.js";import"./chunk-7VFUX7IX.js";import"./chunk-XLF4LAH2.js";import"./chunk-ONKZ57T6.js";import"./chunk-ZC7Q7LCH.js";import{f,o as u,q as d}from"./chunk-6KXF36WM.js";u();d();var v=f(H()),m=f(I()),o=f(E());M();O();D();var h=class extends S{async signTransaction(a,t,e){let p=a.hdPathMap[c];t=P(t);let r=await w(t),{payload:s,success:n}=await m.default.ethereumSignTransaction({path:p,transaction:{...r.toJSON(),to:(0,o.bufferToHex)(r.to).toString(),chainId:t.chainId}});if(n){globalThis.platform.focusCurrentWindow();let i=await x(r,{...s});return _(i,t.from)?e?i:{rawTxResult:i}:this.throwInvalidPassPhraseTip()}return this.throwTxCancelTip()}async signPersonalMessage(a,t={}){let e=a.hdPathMap[c],{data:p=""}=t||{},{success:r,payload:s}=await m.default.ethereumSignMessage({path:e,message:(0,o.stripHexPrefix)(p),hex:!0});if(r){globalThis.platform.focusCurrentWindow();let{signature:n=""}=s||{};return(0,o.addHexPrefix)(n)}return this.throwTxCancelTip()}async signTypedData(a,t={}){let e=a.hdPathMap[c];if(!(t.version==="V4"))throw new Error("Trezor: Only version 4 of typed data signing is supported");let r=JSON.parse(t.data),{domain_separator_hash:s,message_hash:n}=(0,v.default)(r,!0),{success:i,payload:C}=await m.default.ethereumSignTypedData({path:e,data:r,metamask_v4_compat:!0,domain_separator_hash:s,message_hash:n});return i?(l().focusLastOkPopupWithCache(),C?.signature):this.throwTxCancelTip()}throwInvalidPassPhraseTip(){throw g.error(T("wallet_extension_transaction_toast_trezor")),new Error(y)}},j=new h;export{j as default};

window.inOKXExtension = true;
window.inMiniApp = false;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=ethAdapter-VL4YWRJJ.js.map
