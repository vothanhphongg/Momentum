import{a as g}from"./chunk-TSTPZ3JM.js";import{i as d,j as u}from"./chunk-JGEHAFTO.js";import{a as x}from"./chunk-VRY2ADKE.js";import{f as y,o as c,q as i}from"./chunk-6KXF36WM.js";c();i();x();c();i();var T=y(g());var k=[{inputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"}],internalType:"struct IAllowanceTransfer.TokenSpenderPair[]",name:"approvals",type:"tuple[]"}],name:"lockdown",outputs:[],stateMutability:"nonpayable",type:"function"}],l=async({tokenAddress:r,approvalAddress:a,permit2Address:t})=>{let{ethers:e}=await d();return t?new e.Contract(t,k).interface.encodeFunctionData("lockdown",[[{token:r,spender:a}]]):new e.Contract(r,T.default).interface.encodeFunctionData("approve",[a,0])},v=async({tokenAddress:r,approvalAddress:a,userAddress:t})=>{let e="approve(address,uint256)",n=[{type:"address",value:a},{type:"uint256",value:0}],p=await u(),o=new p({fullHost:"https://api.trongrid.io",headers:{}});return await o.transactionBuilder.triggerSmartContract(o.address.toHex(r),e,{},n,o.address.toHex(t))};var R=async({address:r,chainId:a,tokenAddress:t,approvalAddress:e,permit2Address:n,coinId:p,approvalNum:o})=>{let s;try{if(Number(a)===Number(195))s=(await v({tokenAddress:t,approvalAddress:e,userAddress:r})).transaction;else{let m=await l({tokenAddress:t,approvalAddress:e,permit2Address:n});s={from:r,to:n||t,value:"0x0",data:m}}return{chainId:a,approvalAddress:e,tokenAddress:t,coinId:p,txParams:s,approvalNum:o}}catch{return{}}};export{R as a};

window.inOKXExtension = true;
window.inMiniApp = false;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=chunk-TWODQDWW.js.map
