import{a}from"./chunk-6YZM4OTK.js";import{a as d}from"./chunk-WZXX22CA.js";import{c as r}from"./chunk-W2CTJYFJ.js";import"./chunk-XUKVTAH5.js";import"./chunk-7UPVX2FL.js";import{b as c}from"./chunk-BSFXZ46S.js";import"./chunk-ZMCTBWUY.js";import"./chunk-G2266BV2.js";import"./chunk-7VFUX7IX.js";import{o as s,q as o}from"./chunk-6KXF36WM.js";s();o();var h=class extends d{async getLedgerWeb3Provider(){let e=await r();return{web3Provider:new Web3(e.ethereum)}}async getWeb3(){return this.getLedgerWeb3Provider()}async getAccount(){let e=await this.getLedgerWeb3Provider();return a.getAccount({provider:e})}async signMessage({message:e}){let t=await this.getLedgerWeb3Provider(),n=await this.getAccount();return a.signMessage({provider:t,message:e,address:n})}async signTypedData({message:e}){let t=await r(),n=await this.getAccount();return await t?.ethereum?.send("eth_signTypedData_v4",[n,JSON.stringify(e)])}async sendTransaction({payload:e,cb:t}){let i=await(await r())?.ethereum?.send("eth_sendTransaction",[e]);return t&&t(i),i}async switchNetwork({chain:e}){return await(await r())?.ethereum?.send("wallet_switchEthereumChain",[{chainId:`0x${parseInt(e).toString(16)}`}]),!0}async getChainId(){let e=await this.getLedgerWeb3Provider();return a.getChainId({provider:e})}async onChainChange(e){(await r())?.ethereum?.on("chainChanged",e)}async getAllChainTypeInfoList(){let e=await this.getAccount(),t=await this.getChainId();return[{address:e,chainType:c.EVM,chainId:t}]}};export{h as LedgerAdapter};

window.inOKXExtension = true;
window.inMiniApp = false;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=LedgerAdapter-WJW4JQHZ.js.map
